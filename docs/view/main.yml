# view
view:
  template:
    <few-view src="view/frame">
      <few-view slot="primary" src="view/toc" model="tocModel"></few-view>
      <div slot="secondary">
        <div f-cond="/\.yml$/.test(tocModel.items[tocModel.selection].src)"
              class="few-sample-app-md-align-polyfill">
        </div>
        <few-view f-cond="/\.yml$/.test(tocModel.items[tocModel.selection].src)"
                   src="${tocModel.items[tocModel.selection].src.replace(/\.yml$/,'')}">
        </few-view>
        <md-view f-cond="/\.md$/.test(tocModel.items[tocModel.selection].src)"
                    src="${tocModel.items[tocModel.selection].src.replace(/\.md$/,'')}">
        </md-view>
      </div>
    </few-view>
  import:
    - lib/md-view

# model
# model:
#   tocModel:
#     selection: Introduction

# init
init:
  - loadContent

# action
action:
  getContent:
    name: few.httpGet
    input:
      url: config/content.json

  parseJson:
    name: JSON.parse
    input:
      val: ${scope}
    output:
      tocModel.items: ''

  initSelection:
    input:
      val: ${tocModel.selection || Object.keys(scope)[0]}
    output:
      tocModel.selection: 'val'

  loadContent:
    - getContent
    - parseJson
    - initSelection

# option
option:
# scopePath: scope
  actionPaths:
    - action
  stringTemplate:
    pattern: /^\s*\${\s*([\S\s\r\n]*)\s*}\s*$/m
    index: 1

